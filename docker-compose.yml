services:
  db:
    image: postgres:13
    container_name: db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - paymentbot_network

  web:
    build: .
    container_name: web
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=${DEBUG}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
    depends_on:
      - db
    networks:
      - paymentbot_network

  bot:
    build: .
    container_name: bot
    command: ["python", "bot/tg_bot.py"]
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_GROUP_ID=${TELEGRAM_GROUP_ID}
    depends_on:
      - db
    networks:
      - paymentbot_network

  cron:
    build: .
    container_name: cron
    command: ["cron", "-f", "-L", "15"]
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - paymentbot_network

networks:
  paymentbot_network:
    driver: bridge

volumes:
  postgres_data:
